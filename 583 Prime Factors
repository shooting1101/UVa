#include<stdio.h>
#include<string.h>
#include<math.h>
char isprime[100002];
void sieve(void);
int main()
{
    int n, m, i, prime[50000], num, ppow[50000];
    memset(isprime, 0, sizeof(char));
    sieve();
    while(scanf("%d", &n) != EOF)
    {
        if(!n)
            break;
        printf("%d = ", n);
        if(n < 0)
        {
            printf("-1 x ");
            n *= -1;
        }
        memset(prime, 0, sizeof(int));
        memset(ppow, 0, sizeof(int));
        m = (int)(sqrt(n)+0.001);
        num = 0;
        for(i=2; i<=m; i++)
        {
            if((isprime[i] == 1) && (n%i == 0))
            {
                prime[num] = i;
                while(n%i == 0)
                {
                    ppow[num]++;
                    n /= i;
                }
                num++;
            }
        }
        if(n > 1){
            prime[num] = n;
            ppow[num]++;
            num++;
        }
        printf("%d", prime[0]);
        ppow[0]--;
        for(i=0; i<num; i++)
        {
            while(ppow[i])
            {
                printf(" x %d", prime[i]);
                ppow[i]--;
            }
        }
        printf("\n");
    }
    return 0;
}
void sieve(void)
{
    int i, j;
    for(i=2; i<=100000; i++)
    {
        if(isprime[i] == 0)
            for(j=i; j<=100000; j+=i)
            {
                isprime[j] = 1;
            }
    }
}
